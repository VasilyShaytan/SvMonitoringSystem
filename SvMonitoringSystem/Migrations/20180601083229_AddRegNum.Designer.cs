// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SvMonitoringSystem.Models;
using System;

namespace SvMonitoringSystem.Migrations
{
    [DbContext(typeof(MonitoringContext))]
    [Migration("20180601083229_AddRegNum")]
    partial class AddRegNum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("SvMonitoringSystem.Models.BasicParameter", b =>
                {
                    b.Property<int>("BasicParameterId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Acronym");

                    b.Property<string>("DataRange");

                    b.Property<string>("DataSource");

                    b.Property<int>("Pgl");

                    b.Property<int>("Pgn");

                    b.Property<string>("SpnName");

                    b.Property<string>("SpnNameRu");

                    b.HasKey("BasicParameterId");

                    b.ToTable("BasicParameters");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Parameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BasicParameterId");

                    b.Property<DateTime>("BasicParameterTimeValue");

                    b.Property<int>("BasicParameterValue");

                    b.Property<int>("VehicleId");

                    b.HasKey("ParameterId");

                    b.HasIndex("BasicParameterId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("CoordinateLatitude");

                    b.Property<double>("CoordinateLongitude");

                    b.Property<DateTime>("CoordinateTimeValue");

                    b.Property<int>("VehicleId");

                    b.HasKey("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RoleId");

                    b.Property<string>("UserLogin");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPassword");

                    b.Property<string>("UserPhone");

                    b.Property<string>("UserSurname");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Mark");

                    b.Property<string>("ModelType");

                    b.Property<string>("OverallDimensions");

                    b.Property<string>("RegistrationNumber");

                    b.Property<int>("UsefulVolume");

                    b.Property<int?>("VehicleGroupId");

                    b.Property<string>("VehicleType");

                    b.Property<int>("YearIssue");

                    b.Property<int>("СarryingСapacity");

                    b.HasKey("VehicleId");

                    b.HasIndex("VehicleGroupId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.VehicleGroup", b =>
                {
                    b.Property<int>("VehicleGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("VehicleGroupName");

                    b.HasKey("VehicleGroupId");

                    b.ToTable("VehicleGroups");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.VehicleInGroup", b =>
                {
                    b.Property<int>("VehicleInGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("VehicleGroupId");

                    b.Property<int>("VehicleId");

                    b.HasKey("VehicleInGroupId");

                    b.HasIndex("VehicleGroupId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleInGroups");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Parameter", b =>
                {
                    b.HasOne("SvMonitoringSystem.Models.BasicParameter", "BasicParameter")
                        .WithMany()
                        .HasForeignKey("BasicParameterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SvMonitoringSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Route", b =>
                {
                    b.HasOne("SvMonitoringSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.User", b =>
                {
                    b.HasOne("SvMonitoringSystem.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.Vehicle", b =>
                {
                    b.HasOne("SvMonitoringSystem.Models.VehicleGroup", "VehicleGroup")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleGroupId");
                });

            modelBuilder.Entity("SvMonitoringSystem.Models.VehicleInGroup", b =>
                {
                    b.HasOne("SvMonitoringSystem.Models.VehicleGroup", "VehicleGroup")
                        .WithMany()
                        .HasForeignKey("VehicleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SvMonitoringSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
